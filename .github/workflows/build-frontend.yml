name: Airbyte CI - Platform

on:
  schedule:
    - cron: "0 */1 * * *"
  push:
    paths:
      - "airbyte-webapp/**"
      - "airbyte-webapp-e2e-tests/**"

    branches-ignore:
      - "gitbook/v1"

jobs:
  ensure-images-exist:
    name: "Ensure all required Docker images exist on Dockerhub"
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v2

      - name: Check images exist
        run: ./tools/bin/check_images_exist.sh all

  # In case of self-hosted EC2 errors, remove this block.
  start-frontend-test-runner:
    name: Start Frontend Test EC2 Runner
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v2
      - name: Start AWS Runner
        id: start-ec2-runner
        uses: ./.github/actions/start-aws-runner
        with:
          aws-access-key-id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
          github-token: ${{ secrets.SELF_RUNNER_GITHUB_ACCESS_TOKEN_1 }}
  frontend-test:
    needs: start-frontend-test-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-frontend-test-runner.outputs.label }} # run the job on the newly created runner
    name: Run Frontend Test
    timeout-minutes: 120
    steps:
      - name: Checkout Airbyte
        uses: actions/checkout@v2

      - name: Cache Build Artifacts
        uses: ./.github/actions/cache-build-artifacts
        with:
          cache-key: ${{ secrets.CACHE_VERSION }}
          cache-python: "false"

      - uses: actions/setup-java@v1
        with:
          java-version: "17"

      - uses: actions/setup-node@v1
        with:
          node-version: "16.13.0"

      - name: Install Cypress Test Dependencies
        run: |
          # wait to receive lock (see https://askubuntu.com/questions/132059/how-to-make-a-package-manager-wait-if-another-instance-of-apt-is-running)
          while sudo fuser /var/{lib/{dpkg,apt/lists},cache/apt/archives}/lock >/dev/null 2>&1; do
             sleep 1
          done

          sudo apt-get update && sudo apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

      - name: Set up CI Gradle Properties
        run: |
          mkdir -p ~/.gradle/
          cat > ~/.gradle/gradle.properties <<EOF
          org.gradle.jvmargs=-Xmx8g -Xss4m --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \
            --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED \
            --add-exports jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED \
            --add-exports jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \
            --add-exports jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED
          org.gradle.workers.max=8
          org.gradle.vfs.watch=false
          EOF

      - name: Build Platform Docker Images
        run: SUB_BUILD=PLATFORM ./gradlew --no-daemon assemble --scan

      - name: Run End-to-End Frontend Tests
        env:
          CYPRESS_WEBAPP_KEY: ${{ secrets.CYPRESS_WEBAPP_KEY }}
        run: ./tools/bin/e2e_test.sh
  # In case of self-hosted EC2 errors, remove this block.
  stop-frontend-test-runner:
    name: Stop Frontend Test EC2 Runner
    timeout-minutes: 10
    needs:
      - start-frontend-test-runner # required to get output from the start-runner job
      - frontend-test # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.SELF_RUNNER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SELF_RUNNER_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@v2.3.0
        with:
          mode: stop
          github-token: ${{ secrets.SELF_RUNNER_GITHUB_ACCESS_TOKEN_1 }}
          label: ${{ needs.start-frontend-test-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-frontend-test-runner.outputs.ec2-instance-id }}
